# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "remnux/remnux"
  
  config.vm.hostname = "remnux-analysis"

  config.vm.provider "virtualbox" do |vb|
    # Set a short, simple name for the VM

    vb.gui = true

    vb.memory = "4096"
    vb.cpus = 2

    # Set video memory
    vb.customize ["modifyvm", :id, "--vram", "128"]
    
    # Enable 3D acceleration
    vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
    
    # Disable audio to reduce attack surface
    vb.customize ["modifyvm", :id, "--audio", "none"]

  end

  # Copy your SSH key files from the host to the guest VM
  config.vm.provision "file", source: File.expand_path("~/.ssh/id_rsa"), destination: "/home/vagrant/.ssh/id_rsa"
  config.vm.provision "file", source: File.expand_path("~/.ssh/id_rsa.pub"), destination: "/home/vagrant/.ssh/id_rsa.pub"

  # Fix ownership and permissions in the guest
  config.vm.provision "shell", inline: <<-SHELL
    chown vagrant:vagrant /home/vagrant/.ssh/id_rsa /home/vagrant/.ssh/id_rsa.pub
    chmod 600 /home/vagrant/.ssh/id_rsa
    chmod 644 /home/vagrant/.ssh/id_rsa.pub
  SHELL

  # adding ssh key and cloning configs git
  config.vm.provision "shell", inline: <<-SHELL
    # don't stop in case of error
    set +e    

    # Make sure ~/.ssh exists
    mkdir -p /home/vagrant/.ssh
    chown -R vagrant:vagrant /home/vagrant/.ssh

    # Add GitHub to known_hosts to avoid "Host key verification" prompts
    ssh-keyscan -H github.com >> /home/vagrant/.ssh/known_hosts
    chown vagrant:vagrant /home/vagrant/.ssh/known_hosts
    chmod 600 /home/vagrant/.ssh/known_hosts

    # Clone as the vagrant user, ensuring it uses the forwarded SSH agent
    if [ -d /home/vagrant/Desktop/configs ]; then
      echo "configs already present. Skipping cloning.."
    else
      echo "Cloning configs..."
      sudo -E -u vagrant -H git clone git@github.com:justincapik/configs.git /home/vagrant/Desktop/configs
      sudo -E -u vagrant -H git clone git@github.com:justincapik/playground.git /home/vagrant/Desktop/playground
    fi
  SHELL

  # Shell provisioner to install packages
  config.vm.provision "shell", path: "install.sh"


  config.trigger.before :destroy do |trigger|
    trigger.name = "Git commit and push"
    trigger.run = { inline: "bash -c cd /home/vagrant/Desktop/configs && git add . && git commit -m 'Auto commit before destroy' && git push" }
  end

end

